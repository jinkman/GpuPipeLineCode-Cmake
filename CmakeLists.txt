# 最低指定的CMake版本
cmake_minimum_required(VERSION 3.0)

# 指定编译器
# CMAKE_C_FLAGS_DEBUG          ----  C 编译器
# CMAKE_CXX_FLAGS_DEBUG        ----  C++ 编译器
# -std=c++11  使用 C++11
# -g：只是编译器，在编译的时候，产生调试信息。
# -Wall：生成所有警告信息。一下是具体的选项，可以单独使用
set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11   -g  -wall  ")

MESSAGE(STATUS "#############如没安装EasyX,请前往安装：https://easyx.cn/download ############")

# 括号里面填你的工程名
PROJECT(Test)

SET(IncludeDir ${CMAKE_CURRENT_SOURCE_DIR}/include)
SET(SrcDir ${CMAKE_CURRENT_SOURCE_DIR}/src)

file(GLOB_RECURSE Inc ${IncludeDir}/*.h)
file(GLOB_RECURSE Src ${SrcDir}/*.cpp)

# 分组
SOURCE_GROUP(TREE ${CMAKE_SOURCE_DIR} FILES ${Inc} )
SOURCE_GROUP(TREE ${CMAKE_SOURCE_DIR} FILES ${Src} )


# 头文件路径
INCLUDE_DIRECTORIES(include)


# 生成可执行文件，生成的test即为可执行文件
add_executable(test 
	${Inc}
	${Src}
)